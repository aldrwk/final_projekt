<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.boot.mapper.BoardMapper">
    <select id="getListCount" resultType="int">
        select count(*) from board3
    </select>
    <select id="getDetail" parameterType="int" resultType="board">
        select * from board3 where board_num = #{number}
    </select>

<!-- 문법 오류
    where rnum> #{start}
    ==>해결법
        1. where rnum &gt;= #{start}
        2.where rnum <![CDATA[ >= ]]> #{start}
    ==> 설명
        1. HTML 문서는 '<', '>'와 같은 마크업 문자들을 파싱해서 읽어들이는 구조입니다. 그래서 마크업 문자들을 작다(<), 크다(>)로 사용하기 위해서
            '&lt;', '&gt;'등의 escape 문자열 (escape character)을 이용해야 합니다.
                < == &lt;      /      > == &gt;
        2. CDATA (Character DATA) - XML 파서가 분석하지 않는 문자 데이터를 의미합니다.
            사용하는 방법은 <![CDATA[ 와 ]]> 사이에 문자들을 넣으면 됩니다.

    -->
    <select id="getBoardList" parameterType="java.util.Map" resultType="board">
            select * from (select rownum rnum, b.* from
                            (select board3.*,nvl(cnt,0) cnt from board3 left join (select board_num, count(*) cnt from comments3 group by board_num) c
                                                            on board3.board_num = c.board_num order by board_re_ref desc, board_re_seq asc) b
                                where rownum &lt;= #{end})
            where rnum &gt;= #{start} and rnum &lt;= #{end}
        </select>
    <select id="isBoardWriter" parameterType="java.util.Map" resultType="board">
            select * from board3 where board_num = #{num} and board_pass = #{pass}
    </select>
<!--1. jdbcType=VARCHAR : 첨부 파일을 추가 하지 않은 경우 에러 처리해 줍니다.
                        해당 필드가 null인 경우 jdbcType=VARCHAR로 처리하면 null로 설정됩니다.
    2.  a. insert (order="BEFORE")
            조회(select nv1(max(BOARD_NUM),0)+1 from board) 합니다.
        b. 조회한 값을 keyProperty="BOARD_NUM"에서 설정한 대로 "BOARD_NUM" 프로퍼티에 저장합니다.
            (public void setBOARD_NUM(int bOARD_NUM))
        c. insert문의 #{BOARD_NUM}는 지금 구한 값을 BoardBean에서 가져옵니다.
            (public String getBOARD_NUM() {return BOARD_NUM; })-->

        <insert id="insertBoard" parameterType="board">
    <!--    <selectKey resultType="int" order="BEFORE" keyProperty="board_num">
                select nvl(max(board_num),0)+1 from board
            </selectKey>-->
            insert into board3 values
                (board_seq3.nextval, #{board_name}, #{board_pass}, #{board_subject}, #{board_content},
                 #{board_file, jdbcType=VARCHAR}, #{board_original, jdbcType=VARCHAR}, board_seq.nextval,
                 #{board_re_lev},#{board_re_seq}, #{board_readcount}, systimestamp)
    </insert>
    <update id="setReadCountUpdate" parameterType="int">
        update board3 set BOARD_READCOUNT = BOARD_READCOUNT + 1 where board_num = #{num}
    </update>
    <update id="boardUpdate" parameterType="board" >
        update board3 set board_subject=#{board_subject}, board_content = #{board_content},
                         board_file=#{board_file},board_original =#{board_original}
        where board_num =#{board_num}
    </update>
    <update id="boardReplyUpdate" parameterType="board">
        update board3 set board_re_seq = board_re_seq+1
                     where board_re_ref = ${board_re_ref} and board_re_seq &gt; ${board_re_seq}
     </update>
    <insert id="boardReply" parameterType="board">
        insert into board3 values
            (board_seq.nextval, #{board_name}, #{board_pass}, #{board_subject}, #{board_content},
             #{board_file, jdbcType=VARCHAR}, #{board_original, jdbcType=VARCHAR}, #{board_re_ref},
             #{board_re_lev}, #{board_re_seq}, #{board_readcount}, systimestamp)
    </insert>
    <delete id="boardDelete" parameterType="board">
        <![CDATA[delete from board3
        where board_re_ref = #{board_re_ref} and board_re_lev >= #{board_re_lev} and board_re_seq >= #{board_re_seq}
        and board_re_seq <= (nvl((select min(board_re_seq)-1 from board3
        where board_re_ref = #{board_re_ref} and board_re_lev = #{board_re_lev} and board_re_seq > #{board_re_seq}) ,
        (select max(board_re_seq) from board3 where board_re_ref = #{board_re_ref})))
        ]]>
    </delete>
    
    <select id="DeleteFileList" resultType="String">
        select board_file from DELETE_FILE
    </select>
    <delete id="DeleteFile" parameterType="String">
        delete from DELETE_FILE where BOARD_FILE = #{file_name}
    </delete>
    </mapper>